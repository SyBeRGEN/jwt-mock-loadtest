name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: jwt-mock
  DOCKERHUB_USERNAME: SyBeRGEN

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: ☕ Set up Java 17 (Temurin)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🛠️ Make Gradle executable
        run: chmod +x ./gradlew

      - name: 🧱 Build Spring Boot app
        run: ./gradlew build

      - name: 🧪 Install Apache JMeter 5.6.3
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz
          export PATH="$(pwd)/apache-jmeter-5.6.3/bin:$PATH"
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.3" >> $GITHUB_ENV
          echo "$(pwd)/apache-jmeter-5.6.3/bin" >> $GITHUB_PATH

      - name: 🐳 Docker Compose Up (если есть)
        run: |
          if [ -f docker-compose.yml ]; then
            docker-compose up -d
          else
            echo "docker-compose.yml не найден, пропускаем"
          fi

      - name: 🕐 Wait for services (optional)
        run: sleep 10

      - name: 🚀 Run JMeter test
        run: |
          ./apache-jmeter-5.6.3/bin/jmeter -n -t jwt_mock_test.jmx -l result.jtl -e -o report

      - name: 📤 Upload result.jtl
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: result.jtl

      - name: 📤 Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: report/

      - name: 📤 Upload docker-compose logs (если есть)
        run: |
          if [ -f docker-compose.yml ]; then
            docker-compose logs > dc-logs.txt || echo "docker-compose logs failed" > dc-logs.txt
          else
            echo "docker-compose.yml не найден, логи не сохраняем"
          fi

      - name: 📞 Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-logs
          path: dc-logs.txt

  docker-deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build Docker image
        run: docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      - name: 🚀 Push Docker image
        run: docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  publish-report:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⬇️ Download HTML report artifact
        uses: actions/download-artifact@v4
        with:
          name: jmeter-html-report
          path: report/

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report